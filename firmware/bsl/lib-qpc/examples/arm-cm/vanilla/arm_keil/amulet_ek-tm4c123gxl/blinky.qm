<?xml version="1.0" encoding="UTF-8"?>
<model version="2.3.2">
 <framework name="qpc"/>
 <package name="AOs" stereotype="0x02">
  <class name="Blinky" superclass="qpc::QActive">
   <attribute name="timeEvt" type="QTimeEvt" visibility="0x02" properties="0x00"/>
   <statechart>
    <initial target="../1">
     <action>/*this is a comment*/
QTimeEvt_postEvery(&amp;me-&gt;timeEvt, (QActive *)me, BSP_TICKS_PER_SEC/2);</action>
     <initial_glyph conn="12,3,4,0,8,8,8">
      <action box="0,-2,42,7"/>
     </initial_glyph>
    </initial>
    <state name="off">
     <entry>AmuletActuatorsEvt *ledEvt;

ledEvt = Q_NEW(AmuletActuatorsEvt, LEDOFF_SIG);
QACTIVE_POST(AO_AmuletActuators, &amp;ledEvt-&gt;super, me);

///Do not call the BSP directly:
//BSP_ledOff();

///If we wanted to use the publish-subscribe:
///TurnLedEvt *ledEvt;
///ledEvt = Q_NEW(TurnLedEvt, TURNLEDOFF_SIG);
///QF_PUBLISH(&amp;ledEvt-&gt;super, me);
</entry>
     <tran trig="SWITCH" target="../../2">
      <tran_glyph conn="29,25,1,3,11">
       <action box="0,-2,6,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="8,19,21,16">
      <entry box="1,2,14,6"/>
     </state_glyph>
    </state>
    <state name="on">
     <entry>AmuletActuatorsEvt *ledEvt;

ledEvt = Q_NEW(AmuletActuatorsEvt, LEDON_SIG);
QACTIVE_POST(AO_AmuletActuators ,&amp;ledEvt-&gt;super, me);

///Do not call the BSP directly:
//BSP_ledOn();

///If we wanted to use the publish-subscribe:

///TurnLedEvt *ledEvt;
///ledEvt = Q_NEW(TurnLedEvt, TURNLEDON_SIG);
///QF_PUBLISH(&amp;ledEvt-&gt;super, me);
</entry>
     <tran trig="SWITCH" target="../../1">
      <tran_glyph conn="40,31,3,1,-11">
       <action box="0,-2,6,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="40,19,20,16">
      <entry box="1,2,15,5"/>
     </state_glyph>
    </state>
    <state_diagram size="80,50"/>
   </statechart>
  </class>
  <attribute name="AO_Blinky" type="QActive * const" visibility="0x00" properties="0x00"/>
  <operation name="Blinky_ctor" type="void" visibility="0x00" properties="0x00">
   <code>Blinky *me = (Blinky *)AO_Blinky;
    QActive_ctor(&amp;me-&gt;super, (QStateHandler)&amp;Blinky_initial);
    QTimeEvt_ctor(&amp;me-&gt;timeEvt, SWITCH_SIG);</code>
  </operation>
 </package>
 <directory name=".">
  <file name="blinky.c">
   <text>#include &quot;qp_port.h&quot;
#include &quot;dpp.h&quot;
#include &quot;amulet_actuators.h&quot;
#include &quot;blinky.h&quot;
#include &quot;bsp.h&quot;

/* Active object class -----------------------------------------------------*/
$declare(AOs::Blinky)

void QF_onClockTick(void) {
    QF_TICK((void *)0);
}


/* Local objects -----------------------------------------------------------*/
static Blinky l_blinky; /* the single instance of the Table active object */


/* Global-scope objects ----------------------------------------------------*/
QActive * const AO_Blinky = &amp;l_blinky.super; /* &quot;opaque&quot; AO pointer */

$define(AOs::Blinky_ctor)

$define(AOs::Blinky)</text>
  </file>
  <file name="blinky.h">
   <text>#ifndef blinky_h
#define blinky_h


enum BlinkySignals {
    SWITCH_SIG = Q_USER_SIG,
};

$declare(AOs::Blinky_ctor)
$declare(AOs::AO_Blinky)

#endif                    /* blinky_h */</text>
  </file>
 </directory>
</model>
