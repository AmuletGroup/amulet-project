/*****************************************************************************
* Model: amulet_sensors.qm
* File:  ./amulet_sensors.h
*
* This code has been generated by QM tool (see state-machine.com/qm).
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*****************************************************************************/
/* @(/3/1) .................................................................*/
#ifndef amulet_sensors_h
#define amulet_sensors_h

#include "qp_port.h"
#include "amulet.h"
#include "amulet_api.h"

// Internal sensors and devices:
#define IMU 1
#define ACCELEROMETER 2
#define GYROSCOPE 3
#define MAGNETOMETER 4
#define MICROPHONE 5
#define LIGHT 6
#define TEMPERATURE 7
#define POWER_CURRENT 8
#define POWER_VOLTAGE 9
#define M0_SUPPLY_VOLTAGE 10
#define BUTTONA 11
#define BUTTONB 12



enum AmuletSensorsSignals {
    LIST_INTERNAL_SENSORS_SIG = Q_USER_SIG,
    SUBSCRIBE_INTERNAL_SENSOR_SIG,
    DEVICE_DATA_SIG
};

enum SensorSignals {
    BUTTON_A_PRESSED_SIG = Q_USER_SIG + 5,
    BUTTON_B_PRESSED_SIG,
};

/* @(/1/0) .................................................................*/
typedef struct AmuletSensorsEvtTag {
/* protected: */
    QEvt super;

/* public: */
    uint8_t imu_a;
    uint8_t imu_b;
    uint8_t imu_c;
    uint16_t expiration;
    uint16_t window_size;
    uint8_t sensor_id;
    uint16_t window_interval;
    uint8_t caller_id;
} AmuletSensorsEvt;

/* @(/1/1) .................................................................*/
typedef struct SensorEvtTag {
/* protected: */
    QEvt super;
} SensorEvt;


/* @(/2/2) .................................................................*/
void AmuletSensors_ctor(void);

extern QActive * const AO_AmuletSensors;


#endif                    /* amulet_sensors_h */
