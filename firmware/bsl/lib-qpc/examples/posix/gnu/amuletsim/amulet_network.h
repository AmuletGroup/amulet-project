/*****************************************************************************
* Model: amulet_network.qm
* File:  ./amulet_network.h
*
* This code has been generated by QM tool (see state-machine.com/qm).
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*****************************************************************************/
/* @(/3/1) .................................................................*/
#ifndef amulet_network_h
#define amulet_network_h

#include "qp_port.h"
#include "amulet.h"
#include "amulet_api.h"


// External sensors and devices:
#define SMARTPHONE 128
#define HRM 129
#define GSR 130
#define NICOTINE 131


enum AmuletNetworkSignals {
    ADD_MESSAGE_TO_QUEUE_SIG = Q_USER_SIG,
    SEND_MESSAGE_FROM_QUEUE_SIG,
    INCOMMING_ACK_SIG,
    INCOMMING_NACK_SIG,
    INCOMMING_EVT_SIG,
    DEVICE_DATA, //This should probably change to SENSOR_DATA
    DEVICE_UNAVAIL
};


/* @(/1/0) .................................................................*/
typedef struct AmuletNetworkEvtTag {
/* protected: */
    QEvt super;

/* public: */
    uint16_t messageID;
    uint8_t majorType;
    uint8_t minorType;
    uint8_t targetID;
    uint8_t * params;
    uint8_t nparams;
    uint8_t length;
    uint8_t sender_id;
} AmuletNetworkEvt;


/* @(/2/2) .................................................................*/
void AmuletNetwork_ctor(void);

extern QActive * const AO_AmuletNetwork;


#endif                    /* amulet_network_h */
