<?xml version="1.0" encoding="UTF-8"?>
<model version="2.3.2">
 <framework name="qpc"/>
 <package name="Events" stereotype="0x01"/>
 <package name="AOs" stereotype="0x02">
  <class name="AmuletAuthorization" superclass="qpc::QActive">
   <attribute name="calls" type="int8_t" visibility="0x02" properties="0x01"/>
   <attribute name="outgoingQueue" type="ipcMessage *" visibility="0x02" properties="0x01"/>
   <statechart>
    <initial target="../1">
     <initial_glyph conn="28,6,5,0,16,10">
      <action box="0,-2,24,5"/>
     </initial_glyph>
    </initial>
    <state name="NetworkEnabled">
     <tran trig="LEDON" target="..">
      <action>
const AmuletActuatorsEvt *reqEvt = Q_EVT_CAST(AmuletActuatorsEvt);
reqEvt-&gt;authorization[0] = 3;

authorize();

QACTIVE_POST(AO_AmuletActuators, &amp;reqEvt-&gt;super,me);</action>
      <tran_glyph conn="23,26,3,1,43,2,-2">
       <action box="0,-2,13,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="23,16,41,30"/>
    </state>
    <state_diagram size="80,85"/>
   </statechart>
  </class>
  <attribute name="AO_AmuletAuthorization" type="QActive * const" visibility="0x00" properties="0x00"/>
  <operation name="AmuletAuthorization_ctor" type="void" visibility="0x00" properties="0x00">
   <code>AmuletAuthorization *me = (AmuletAuthorization *)AO_AmuletAuthorization;
QActive_ctor(&amp;me-&gt;super, (QStateHandler)&amp;AmuletAuthorization_initial);
//QTimeEvt_ctor(&amp;me-&gt;processNextEvt, SEND_MESSAGE_FROM_QUEUE_SIG);
</code>
  </operation>
 </package>
 <directory name=".">
  <file name="amulet_authorization.c">
   <text>#include &lt;stdlib.h&gt;

#include &quot;amulet_authorization.h&quot;


/* Active object class -----------------------------------------------------*/
$declare(AOs::AmuletAuthorization)


/* Local objects -----------------------------------------------------------*/
static AmuletAuthorization l_amulet_authorization; /* the single instance of the AmuletAuthorization active object */


/* Global-scope objects ----------------------------------------------------*/
QActive * const AO_AmuletAuthorization = &amp;l_amulet_authorization.super; /* &quot;opaque&quot; AO pointer */


$define(AOs::AmuletAuthorization_ctor)

$define(AOs::AmuletAuthorization)</text>
  </file>
  <file name="amulet_authorization.h">
   <text>#ifndef amulet_authorization_h
#define amulet_authorization_h


#include &quot;qp_port.h&quot;
#include &quot;amulet.h&quot;
#include &quot;amulet_api.h&quot;

enum AmuletAuthorizationSignals {
    AUTHORIZATION_REQUEST_SIG = Q_USER_SIG,
    
};

$declare(AOs::AmuletAuthorization_ctor)
$declare(AOs::AO_AmuletAuthorization)

#endif                    /* amulet_authorization_h */</text>
  </file>
 </directory>
</model>
