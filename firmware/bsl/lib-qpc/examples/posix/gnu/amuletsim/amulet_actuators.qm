<?xml version="1.0" encoding="UTF-8"?>
<model version="2.3.2">
 <framework name="qpc"/>
 <package name="AOs" stereotype="0x02">
  <class name="AmuletActuators" superclass="qpc::QActive">
   <statechart>
    <initial target="../1">
     <action>//The lines below are not needed for directed messages
//QActive_subscribe(&amp;me-&gt;super, LEDON_SIG);
//QActive_subscribe(&amp;me-&gt;super, LEDOFF_SIG);</action>
     <initial_glyph conn="12,1,5,0,19,6">
      <action box="0,-2,49,9"/>
     </initial_glyph>
    </initial>
    <state name="ActuatorsEnabled">
     <tran trig="LEDON" target="..">
      <action>//LedOn(Q_EVT_CAST(AmuletActuatorsEvt)-&gt;led_id);
BSP_ledOn();

/*
const AmuletActuatorsEvt *reqEvt = Q_EVT_CAST(AmuletActuatorsEvt);

uint8_t auth = reqEvt-&gt;authorization[0];


if(3 == auth) {
    LedOn(Q_EVT_CAST(AmuletActuatorsEvt)-&gt;led_id);
    free(Q_EVT_CAST(AmuletActuatorsEvt)-&gt;authorization);
} else {

    //reqEvt-&gt;super-&gt;sig = AUTHORIZATION_REQ_SIG;
    QACTIVE_POST(AO_AmuletAuthorization, &amp;reqEvt-&gt;super,me);
}
*/</action>
      <tran_glyph conn="9,14,3,1,44,4,-2">
       <action box="0,-2,44,5"/>
      </tran_glyph>
     </tran>
     <tran trig="LEDOFF" target="..">
      <action>//LedOff(Q_EVT_CAST(AmuletActuatorsEvt)-&gt;led_id);
BSP_ledOff();</action>
      <tran_glyph conn="9,20,3,1,44,4,-2">
       <action box="0,-2,42,4"/>
      </tran_glyph>
     </tran>
     <tran trig="DISPLAY_MESSAGE" target="..">
      <action>/*
uint8_t * recvmessage = Q_EVT_CAST(AmuletActuatorsEvt)-&gt;message;
uint8_t recvlen = Q_EVT_CAST(AmuletActuatorsEvt)-&gt;message_len;
DisplayMessage(recvmessage, recvlen);
*/
//LedOn(ACTLED3);</action>
      <tran_glyph conn="9,26,3,1,44,2,-2">
       <action box="0,-2,38,6"/>
      </tran_glyph>
     </tran>
     <state_glyph node="9,7,42,34"/>
    </state>
    <state_diagram size="80,50"/>
   </statechart>
  </class>
  <attribute name="AO_AmuletActuators" type="QActive * const" visibility="0x00" properties="0x00"/>
  <operation name="AmuletActuators_ctor" type="void" visibility="0x00" properties="0x00">
   <code>AmuletActuators *me = (AmuletActuators *)AO_AmuletActuators;
QActive_ctor(&amp;me-&gt;super, (QStateHandler)&amp;AmuletActuators_initial);
 </code>
  </operation>
 </package>
 <package name="Events" stereotype="0x01">
  <class name="AmuletActuatorsEvt" superclass="qpc::QEvt">
   <attribute name="led_id" type="uint8_t" visibility="0x00" properties="0x00"/>
   <attribute name="message" type="uint8_t *" visibility="0x00" properties="0x00"/>
   <attribute name="message_len" type="uint8_t" visibility="0x00" properties="0x00"/>
   <attribute name="authorization" type="uint8_t *" visibility="0x00" properties="0x00"/>
  </class>
 </package>
 <directory name=".">
  <file name="amulet_actuators.c">
   <text>#include &lt;stdlib.h&gt;
#include &quot;amulet_actuators.h&quot;

/* Active object class -----------------------------------------------------*/
$declare(AOs::AmuletActuators)


//void QF_onClockTick(void) {
//    QF_TICK((void *)0);
//}


/* Local objects -----------------------------------------------------------*/
static AmuletActuators l_amulet_actuators; /* the single instance of the AmuletActuators active object */


/* Global-scope objects ----------------------------------------------------*/
QActive * const AO_AmuletActuators = &amp;l_amulet_actuators.super; /* &quot;opaque&quot; AO pointer */

$define(AOs::AmuletActuators_ctor)

$define(AOs::AmuletActuators)</text>
  </file>
  <file name="amulet_actuators.h">
   <text>#ifndef amulet_actuators_h
#define amulet_actuators_h

#include &quot;qp_port.h&quot;
#include &quot;amulet.h&quot;
#include &quot;amulet_api.h&quot;


enum AmuletActuatorsSignals {
    LEDON_SIG = Q_USER_SIG,
    LEDOFF_SIG, 
    DISPLAY_MESSAGE_SIG
};

$declare(Events::AmuletActuatorsEvt)

$declare(AOs::AmuletActuators_ctor)
$declare(AOs::AO_AmuletActuators)

#endif                    /* amulet_actuators_h */</text>
  </file>
 </directory>
</model>
