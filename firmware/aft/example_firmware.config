amulet-config:

    #
    # Environment Configuration.
    #

    #amulet_root is the path to root of the amulet repo
    amulet_root: ~/Repos/amulet-project                                 # mac build environment
    # amulet_root: /home/vagrant/Repos/project-amulet                           # vagrant default build environment

    #amulet_apps is the path to root of the applications directory
    amulet_apps: ~/Repos/amulet-project/software                        # mac build environment
    # amulet_apps: /home/vagrant/Repos/project-amulet/src/applications          # vagrant default build environment

    #qpc_root is the path to root of the lib-qpc repo
    qpc_root: ~/Repos/amulet-project/firmware/native/lib-qpc            # mac build environment
    # qpc_root: /home/vagrant/Repos/amulet-project/firmware/native/lib-qpc      # vagrant default build environment

    # qmc_path is the path of the qmc executable
    qmc_path: /Applications/qmc.app/Contents/MacOS                      # mac build environment
    # qmc_path: /home/vagrant/qm/bin/                                           # vagrant default build environment

    #
    # Build Configuration.
    #


    # apps provides a list of names of apps that you'd like to include in the firmware.
    apps:

        # mHealth Applications
        # - name: heartrate
         - name: stress_aware            #Predicts stress level using HR and RRI from Zephry
        # - name: data_logger             #Get's heart rate date from an external sensor via BLE and logs to the SD card
        # - name: EMA                     #EMA App. Displays a question after a timer or manual trigger, gets the user input and logs it to the SD Card. 
        # - name: fall_detection         # A safety application that can detect when the wearer falls down (Contact: Tianlong Yun)
        # - name: bite_counter           # Diet/fitness application for tracking the number of bites in an eating session (Contact: Travis Peters)
        # - name: alertness              # A safety application that monitors HR and detects if sensor wearer is drowsy (Contact: Tianlong Yun)
        # - name: sun_exposure           # A simple app for measuring sun/light exposure over time (Contact: Tianlong Yun)
        # - name: temperature            # A simple app for measuring temperature over time (Contact: Tianlong Yun)
        # - name: pedometer              # A step-counting application (Contact: Tianlong Yun & Travis Peters)
        # - name: ERApp                  # Emergency Response application (Contact: Emily Greene)
        # - name: stress_app             # Stress Application (Contact: Gunnar Pope)

        # Amulet System Applications (Contact: Tianlong Yun, Josiah Hester, and Travis Peters)
        # - name: clock                  # A clock application for the system
        # - name: system                 # A system (settings) application

        # Test Applications (Contact: Tianlong Yun)
        # - name: LED_Blink                 # A simple application to demonstrate blinking an LED 
        # - name: blinky                 # A simple application to demonstrate blinking an LED
        # - name: coretest               # Test application for core functionality
        # - name: profiler               # Test application for resource profiling
        # - name: sensor_logger          # Test application for resource profiling (sensor related)
        # - name: sensor_profiler        # Test application for resource profiling (sensor related)
        # - name: selftest               # Test application for core functionality
        # - name: Wizard                 # A "wizard of oz" type application for user studies

    # device configuration is denoted using config. The value for config is directly used as a define C flag
    config: BSP_SNAIL_KITE

    # flags are set to build firmware process
    flags:
        # if pins is true, the -t flag is set to add toggle pin code
        pins: false

        # if aft is true, the -p flag is set and apps go through AFT translation and runtime checks
        aft: true

        # if resource-profiling is true, the -r flag is set and resource usage/energecy consumption information is produced
        resource_profiling: true

        # Verbose mode displays commands being executed and also warnings in apps/core code that it compiles
        verbose: true

    compiler: gcc
    gcc_root: ~/ti/gcc/bin
